// Generated by view binder compiler. Do not edit!
package com.example.frontend.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.frontend.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTelaRecuperarSenhaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View containerComponents;

  @NonNull
  public final EditText email;

  @NonNull
  public final AppCompatButton enviarEmail;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView tituloLogin;

  @NonNull
  public final TextView tituloRecuperarSenha;

  @NonNull
  public final ImageView voltarTelaLogin;

  private ActivityTelaRecuperarSenhaBinding(@NonNull ConstraintLayout rootView,
      @NonNull View containerComponents, @NonNull EditText email,
      @NonNull AppCompatButton enviarEmail, @NonNull ImageView logo, @NonNull TextView tituloLogin,
      @NonNull TextView tituloRecuperarSenha, @NonNull ImageView voltarTelaLogin) {
    this.rootView = rootView;
    this.containerComponents = containerComponents;
    this.email = email;
    this.enviarEmail = enviarEmail;
    this.logo = logo;
    this.tituloLogin = tituloLogin;
    this.tituloRecuperarSenha = tituloRecuperarSenha;
    this.voltarTelaLogin = voltarTelaLogin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTelaRecuperarSenhaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTelaRecuperarSenhaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tela_recuperar_senha, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTelaRecuperarSenhaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerComponents;
      View containerComponents = ViewBindings.findChildViewById(rootView, id);
      if (containerComponents == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.enviar_email;
      AppCompatButton enviarEmail = ViewBindings.findChildViewById(rootView, id);
      if (enviarEmail == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.titulo_login;
      TextView tituloLogin = ViewBindings.findChildViewById(rootView, id);
      if (tituloLogin == null) {
        break missingId;
      }

      id = R.id.titulo_recuperar_senha;
      TextView tituloRecuperarSenha = ViewBindings.findChildViewById(rootView, id);
      if (tituloRecuperarSenha == null) {
        break missingId;
      }

      id = R.id.voltar_tela_login;
      ImageView voltarTelaLogin = ViewBindings.findChildViewById(rootView, id);
      if (voltarTelaLogin == null) {
        break missingId;
      }

      return new ActivityTelaRecuperarSenhaBinding((ConstraintLayout) rootView, containerComponents,
          email, enviarEmail, logo, tituloLogin, tituloRecuperarSenha, voltarTelaLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
